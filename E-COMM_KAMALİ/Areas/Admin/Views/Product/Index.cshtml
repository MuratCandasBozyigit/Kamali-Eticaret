@{
    ViewData["Title"] = "Ürün Listesi";
}

<h2>Ürün Listesi</h2>

<div class="mt-4" style="text-align:right;">
    <a asp-area="Admin" asp-controller="Product" asp-action="Create" class="btn btn-primary ti-plus">Ekle</a>
</div>
<br />
@* <div class="card bg-light text-dark mt-4"> *@
   @*  <div class="card-header d-flex justify-content-between align-items-center">
        <h5 class="mb-0"><box-icon name="box" color="dark" size="sm" animation="tada"></box-icon> Ürünler</h5>
    </div> *@
    <div class="card-body">
        <table id="tblProducts" class="table table-hover">
            <thead>
                <tr>
                    <th>Resim</th>
                    <th>Ürün Adı</th>
                    <th>Başlık</th>
                    <th>Beden</th>
                    <th>Açıklama</th>
                    <th>Fiyat</th>
                    <th>Kategori</th>
                    <th>İşlemler</th>
                </tr>
            </thead>
            <tbody>
                <!-- AJAX ile veri buraya eklenecek -->
            </tbody>
        </table>
    </div>
@* </div> *@

@section Css {
    <link rel="stylesheet" href="https://cdn.datatables.net/1.11.5/css/jquery.dataTables.min.css" />
}

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
    <script>
        $(document).ready(function () {
            // DataTable'ı başlat
            var table = $('#tblProducts').DataTable({
                ajax: {
                    url: '/Admin/Product/GetAllProductsAsync', // AJAX isteği yapacak endpoint
                    dataSrc: '' // Gelen veriyi doğrudan kullan
                },
                columns: [
                    {
                        data: 'imageUrl', title: 'Resim', render: function (data) {
                            return '<img src="' + (data || '/images/default.jpg') + '" alt="Ürün Resmi" style="width: 50px; height: 50px;" />';
                        }
                    },
                    { data: 'productName', title: 'Ürün Adı' },
                    { data: 'productTitle', title: 'Başlık' },
                      { data: 'productSize', title: 'Beden' },
                    {
                        data: 'productDescription', title: 'Açıklama', render: function (data) {
                            return data.length > 150 ? data.substring(0, 150) + "..." : data;
                        }
                    },
                    {
                        data: 'price', title: 'Fiyat', render: function (data) {
                            return data.toLocaleString('tr-TR', { style: 'currency', currency: 'TRY' });
                        }
                    },
                    { data: 'category.parentCategoryName', title: 'Kategori' },
                    {
                        data: null, title: 'İşlemler', render: function (data) {
                            return '<a href="/Admin/Product/Edit/' + data.productId + '" class="btn btn-sm btn-warning">Düzenle</a>' +
                                '<button class="btn btn-danger deleteProduct" data-id="' + data.productId + '">Sil</button>';
                        }
                    }
                ]
            });

            // Silme butonuna tıklandığında AJAX ile silme işlemi
            $('#tblProducts').on('click', '.deleteProduct', function () {
                var id = $(this).data('id'); // data-id'den ID'yi alıyoruz

                // Swal ile onay penceresi
                Swal.fire({
                    title: 'Emin misiniz?',
                    text: "Bu Ürün kalıcı olarak silinecek!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Evet, sil!'
                }).then((result) => {
                    if (result.isConfirmed) {
                        // AJAX ile silme işlemi
                        $.ajax({
                            type: "DELETE",  // Silme işlemi için HTTP metodunu DELETE olarak ayarlıyoruz
                            url: "/Admin/Product/DeleteAsync/" + id, // Silme URL'si
                            success: function () {
                                // Başarılı olursa, tabloyu yeniden yükle (veya satırı kaldır)
                                table.row($(this).parents('tr')).remove().draw(); // Silinen öğeyi sayfadan kaldırma
                                Swal.fire('Silindi!', 'Ürün başarıyla silindi.', 'success');
                            },
                            error: function () {
                                Swal.fire('Hata', 'Ürün silinirken bir sorun oluştu.', 'error');
                            }
                        });
                    }
                });
            });
        });
    </script>
}
