@model ECOMM.Core.ViewModels.ProductCreateViewModel


<h2>Yeni Ürün Ekle</h2>

<form asp-action="Create" asp-controller="Product" asp-area="Admin" enctype="multipart/form-data" method="post">
    <div class="form-group">
        <label for="ProductTitle">Ürün Başlığı</label>
        <input type="text" class="form-control" id="ProductTitle" name="ProductTitle" required>
    </div>

    <div class="form-group">
        <label for="ProductName">Ürün Adı</label>
        <input type="text" class="form-control" id="ProductName" name="ProductName" required>
    </div>

    <div class="form-group">
        <label for="ProductPrice">Ürün Fiyatı</label>
        <input type="number" class="form-control" id="ProductPrice" name="ProductPrice" required min"0">
    </div>

    <div class="form-group">
        <label>Ürün Bedeni:</label>
        <div id="size-container">
            @foreach (var size in Model.ProductSizes ?? new List<string>())
            {
                <div class="input-group mb-2">
                    <input type="text" class="form-control" name="ProductSizes" value="@size" required>
                    <button type="button" class="btn btn-danger remove-size">Sil</button>
                </div>
            }
        </div>
        <button type="button" id="add-size" class="btn btn-secondary">Beden Ekle</button>
    </div>

    <div class="form-group">
        <label for="ProductDescription">Ürün Açıklaması</label>
        <textarea rows="10" cols="20" class="form-control" id="ProductDescription" name="ProductDescription" required placeholder="Ürün açıklamanızı buraya yazın..."></textarea>
    </div>

    <div class="form-group">
        <label for="CategoryId" class="form-label">Kategori</label>
        <select class="form-control" id="CategoryId" name="CategoryId" required>
            <option value="">Kategori Seçin</option>
            @foreach (var category in Model.Categories)
            {
                <option value="@category.Value">@category.Text</option>
            }
        </select>
    </div>

    <div class="form-group">
        <label for="Image" class="col-sm-3 col-form-label">Ürün Görseli</label>
        <input type="file" class="form-control" id="Image" name="image">

    </div>

    </br>

    <button type="submit" class="btn btn-primary">Kaydet</button>
</form>

@section Scripts {
    <script>
        // Beden Ekleme
        document.getElementById('add-size').addEventListener('click', function () {
            const sizeContainer = document.getElementById('size-container');
            const inputGroup = document.createElement('div');
            inputGroup.className = 'input-group mb-2';

            inputGroup.innerHTML = `
                <input type="text" class="form-control" name="ProductSizes" placeholder="Beden giriniz" required>
                <button type="button" class="btn btn-danger remove-size">Sil</button>
            `;

            sizeContainer.appendChild(inputGroup);
        });

        // Beden Silme
        document.getElementById('size-container').addEventListener('click', function (e) {
            if (e.target.classList.contains('remove-size')) {
                e.target.parentElement.remove();
            }
        });

        // Form Gönderimi Öncesi Validasyon
        document.querySelector('form').addEventListener('submit', function (e) {
            const requiredFields = document.querySelectorAll('[required]');
            let valid = true;

            requiredFields.forEach(field => {
                if (!field.value.trim()) {
                    field.classList.add('is-invalid');
                    const errorSpan = document.createElement('span');
                    errorSpan.classList.add('text-danger');
                    errorSpan.innerText = `${field.previousElementSibling.innerText} alanı boş bırakılamaz`;
                    field.parentNode.appendChild(errorSpan);
                    valid = false;
                } else {
                    field.classList.remove('is-invalid');
                    const errorSpans = field.parentNode.querySelectorAll('.text-danger');
                    errorSpans.forEach(span => span.remove());
                }
            });

            // Eğer geçersizse formu gönderme
            if (!valid) e.preventDefault();
        });
    </script>
}
