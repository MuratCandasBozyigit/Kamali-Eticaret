@model ECOMM.Core.ViewModels.ProductDetailPageViewModel
@{
    ViewData["Title"] = "Ürün Detayı";
}

<link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700;800&display=swap">
<link rel="stylesheet" href="/css/Mağaza/ProductDetailPage.css">

<div class="container">
    <div class="card-wrapper">
        <div class="card">
            <div class="product-imgs">
                <div class="img-display">
                    <div class="img-showcase">
                        <img src="@Model.Product.ImageUrl" alt="Product image" />
                    </div>
                </div>
            </div>

            <div class="product-content">
                <!-- Ürün Başlığı -->  <h3 class="product-title">@Model.Product.ProductName</h3>
                </br>             
                <h2 class="product-title">@Model.Product.ProductTitle</h2>

                <!-- Mağazaya Git Linki -->
                <a asp-controller="Home" asp-action="Index" class="product-link">Visit store</a>

                <div class="product-price">
                    @if (Model.Product.DiscountRate.HasValue && Model.Product.DiscountRate > 0)
                    {
                        <span class="old-price" style="text-decoration: line-through;">
                            @Model.Product.Price.ToString("C")
                        </span> 
                       <br />
                        <span class="discounted-price" style="color: red;">
                            @(@Model.Product.Price - (@Model.Product.Price * (decimal)Model.Product.DiscountRate.Value / 100))
                        </span>
                    }
                    else
                    {
                        <span>@Model.Product.Price.ToString("C")</span>
                    }
                </div>
                
                <div class="product-router">
                    <ul>
                        <li>
                            Kategori:
                            <span>
                                @(string.IsNullOrWhiteSpace(Model.Product.Category?.ParentCategoryName) ? "Kategori Yok" : Model.Product.Category.ParentCategoryName)
                            </span>
                        </li>
                        <li>
                            Alt Kategori:
                            <span>
                                @(string.IsNullOrWhiteSpace(Model.Product.Category?.ParentCategoryTag) ? "Alt Kategori Yok" : Model.Product.Category.ParentCategoryTag)
                            </span>
                        </li>
                    </ul>
                </div>

                <!-- Ürün Detayı -->
                <div class="product-detail">
                    <h2>Özellikler:</h2>
                    <p>@(string.IsNullOrWhiteSpace(Model.Product.ProductDescription) ? "Açıklama mevcut değil." : Model.Product.ProductDescription)</p>
                    <p>@(string.IsNullOrWhiteSpace(Model.Product.ProductSize) ? "Beden mevcut değil." : Model.Product.ProductSize)</p>
                </div>

                <!-- Satın Alma Bilgisi ve Sepet Ekleme -->
                <div class="purchase-info">
                    <form asp-controller="ShopCart" asp-action="AddToCart" method="post">
                        <input type="hidden" name="productId" value="@Model.Product.ProductId" />
                        <input type="number" name="quantity" value="1" min="1" max="5" class="form-control mt-4" style="width: 60px; display: inline-block;" />
                        <button type="submit" class="btn btn-primary btn-hover">
                            <i class="fa-solid fa-cart-shopping"></i> Sepete Ekle
                        </button>
                    </form>
                    <form asp-controller="Favourites" asp-action="AddToFavourites" class="fav-btn" method="post">
                        <input type="hidden" name="productId" value="@Model.Product.ProductId" />
                        <button type="submit" class="btn btn-primary btn-hover">
                            <i class="fa-regular fa-heart"></i> Favoriler
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>



<div style="padding: 20px; border: 1px solid #ddd; max-width: 800px; margin: 50px auto;">
    <div class="comment">
        <form asp-action="AddComment" method="post">
            <textarea name="content" required placeholder="Yorumunuzu yazın... Giriş Yapmadan yorum yapılamaz."></textarea>
            <input type="hidden" name="productId" value="@Model.Product.ProductId" />
            <button type="submit">Yorum Yap</button>
        </form>
    </div>
</div>

<div class="container mt-4">
    <div class="row justify-content-center align-items-center">
        <!-- Previous Button -->
        <div class="col-auto">
            <button id="previousBtn" class="btn btn-light" onclick="loadProducts(ViewBag.CurrentPage - 1)"
                    aria-label="Previous"
            @* Disable the button if it's the first page *@
            @(ViewBag.CurrentPage == 1 ? "disabled" : "")>
                <span aria-hidden="true">&laquo;</span>
            </button>
        </div>

        <div class="col-10">
            <h1 style="text-align: center;">Ürünler</h1>
            <div id="productList" class="row g-3 justify-content-center"></div>
        </div>
       
    <div class="col-6 col-md-3 custom-col">
        <div class="card mb-3 product-card">
            <img src="@Model.Product.ImageUrl" class="card-img-top product-image" alt="Product Image" />
            <div class="card-body text-center">
                <h5 class="card-title" title="@Model.Product.ProductName">@Model.Product.ProductName</h5>
                <h6 title="@Model.Product.ProductTitle">@Model.Product.ProductTitle</h6>
                <p class="card-text">@Model.Product.Price.ToString("C")</p>
                <a asp-controller="Home" asp-action="ProductDetails" asp-route-productId="@Model.Product.ProductId" class="btn btn-primary btn-hover mb-2 mt-1">Detaylar</a>
                <form asp-controller="ShopCart" asp-action="AddToCart" method="post" class="d-flex flex-column align-items-center">
                    <input type="hidden" name="productId" value="@Model.Product.ProductId" />
                    <input type="number" name="quantity" value="1" min="1" max="5" class="form-control mb-2" style="width: 60px; display: inline-block;" />
                    <button type="submit" class="btn btn-primary btn-hover mb-3">
                        <i class="fa-solid fa-cart-shopping "></i> Sepete Ekle
                    </button>
                </form>
            </div>
        </div>
    </div>

        <!-- Next Button -->
        <div class="col-auto">
            <button id="nextBtn" class="btn btn-light" onclick="loadProducts(ViewBag.CurrentPage + 1)"
                    aria-label="Next"
            @* Disable the button if it's the last page *@
            @(ViewBag.CurrentPage == ViewBag.TotalPages ? "disabled" : "")>
                <span aria-hidden="true">&raquo;</span>
            </button>
        </div>
    </div>
</div>




@section Scripts {
    <script>
        // Function to load products
        function loadProducts(page) {
            $.ajax({
                url: '@Url.Action("ProductDetails", "Home")', // Your controller and action URL
                type: 'GET',
                data: { page: page }, // Pass the current page as parameter
                success: function (data) {
                    // Update the product list
                    $('#productList').html(data.productsHtml);

                    // Update the ViewBag with new page information
                    ViewBag.CurrentPage = data.currentPage;
                    ViewBag.TotalPages = data.totalPages;

                    // Enable/Disable buttons
                    if (data.currentPage == 1) {
                        $('#previousBtn').prop('disabled', true);
                    } else {
                        $('#previousBtn').prop('disabled', false);
                    }

                    if (data.currentPage == data.totalPages) {
                        $('#nextBtn').prop('disabled', true);
                    } else {
                        $('#nextBtn').prop('disabled', false);
                    }
                }
            });
        }
    </script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const productDetails = document.querySelectorAll('.product-detail');

            productDetails.forEach(detail => {
                const originalText = detail.innerHTML;
                const truncatedText = originalText.substring(0, 150) + '...'; // Başlangıçta kısaltılmış metin

                if (originalText.length > 150) {
                    detail.innerHTML = truncatedText; // Kısaltılmış metni göster

                    const readMoreBtn = document.createElement('span');
                    readMoreBtn.className = 'read-more';
                    readMoreBtn.textContent = 'Devamını Oku'; // Buton metni

                    detail.appendChild(readMoreBtn); // Butonu metnin sonuna ekle

                    readMoreBtn.addEventListener('click', () => {
                        if (detail.classList.contains('expand')) {
                            detail.classList.remove('expand'); // Kapat durumunda metni kısalt
                            detail.innerHTML = truncatedText; // Kısaltılmış metni göster
                            detail.appendChild(readMoreBtn); // Butonu tekrar ekle
                            readMoreBtn.textContent = 'Devamını Oku';
                        } else {
                            detail.classList.add('expand'); // Devamını Oku açıldığında metni genişlet
                            detail.innerHTML = originalText; // Tam metni göster
                            detail.appendChild(readMoreBtn); // Butonu tekrar ekle
                            readMoreBtn.textContent = 'Kapat';
                        }
                    });
                }
            });
        });
    </script>
}