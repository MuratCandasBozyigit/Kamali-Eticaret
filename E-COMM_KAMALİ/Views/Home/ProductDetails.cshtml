@model ECOMM.Core.ViewModels.ProductDetailPageViewModel

@{
    ViewData["Title"] = "Ürün Detayı";
}

<link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700;800&display=swap">
<link rel="stylesheet" href="/css/Mağaza/ProductDetailPage.css">

<div class="container">
    <div class="card-wrapper">
        <div class="card">
            <div class="product-imgs">
                <div class="img-display">
                    <div class="img-showcase">
                        <img src="@Model.Product.ImageUrl" alt="Product image" />
                    </div>
                </div>
            </div>

            <div class="product-content">
                <!-- Ürün Başlığı -->  <h3 class="product-title">@Model.Product.ProductName</h3>
                </br>             
                <h2 class="product-title">@Model.Product.ProductTitle</h2>

                <!-- Mağazaya Git Linki -->
                <a asp-controller="Home" asp-action="Index" class="product-link">Visit store</a>

                <div class="product-price">
                    @if (Model.Product.DiscountRate.HasValue && Model.Product.DiscountRate > 0)
                    {
                        <span class="old-price" style="text-decoration: line-through;">
                            @Model.Product.Price.ToString("C")
                        </span> 
                       <br />
                        <span class="discounted-price" style="color: red;">
                            @(@Model.Product.Price - (@Model.Product.Price * (decimal)Model.Product.DiscountRate.Value / 100))
                        </span>
                    }
                    else
                    {
                        <span>@Model.Product.Price.ToString("C")</span>
                    }
                </div>
                
                <div class="product-router">
                    <ul>
                        <li>
                            Kategori: <span id="category-name">Yükleniyor...</span>
                        </li>
                        <li>
                            Alt Kategori: <span id="sub-category-name">Yükleniyor...</span>
                        </li>
                    </ul>
                </div>

           
                <!-- Ürün Detayı -->
                <div class="product-detail">
                    <h2>Özellikler:</h2>
                    <p>@(string.IsNullOrWhiteSpace(Model.Product.ProductDescription) ? "Açıklama mevcut değil." : Model.Product.ProductDescription)</p>
                    <p>@(string.IsNullOrWhiteSpace(Model.Product.ProductSize) ? "Beden mevcut değil." : Model.Product.ProductSize)</p>
                </div>

                <!-- Satın Alma Bilgisi ve Sepet Ekleme -->
                <div class="purchase-info">
                    <form asp-controller="ShopCart" asp-action="AddToCart" method="post">
                        <input type="hidden" name="productId" value="@Model.Product.ProductId" />
                        <input type="number" name="quantity" value="1" min="1" max="5" class="form-control mt-4" style="width: 60px; display: inline-block;" />
                        <button type="submit" class="btn btn-primary btn-hover">
                            <i class="fa-solid fa-cart-shopping"></i> Sepete Ekle
                        </button>
                    </form>
                    <form asp-controller="Favourites" asp-action="AddToFavourites" class="fav-btn" method="post">
                        <input type="hidden" name="productId" value="@Model.Product.ProductId" />
                        <button type="submit" class="btn btn-primary btn-hover">
                            <i class="fa-regular fa-heart"></i> Favoriler
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>



<div style="padding: 20px; border: 1px solid #ddd; max-width: 800px; margin: 50px auto;">
    <div class="comment">
        <form asp-action="AddComment" method="post">
            <textarea name="content" required placeholder="Yorumunuzu yazın... Giriş Yapmadan yorum yapılamaz."></textarea>
            <input type="hidden" name="productId" value="@Model.Product.ProductId" />
            <button type="submit">Yorum Yap</button>
        </form>
    </div>
</div>



@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <script>
        $(document).ready(function () {
            // Product ID'yi belirleyelim (Bu ID'yi dinamik olarak sayfadan alabilirsiniz)
            var productId = @Model.Product.ProductId;  // Örneğin modelden alınıyor

            // AJAX ile kategori ve alt kategori bilgilerini alalım
            $.ajax({
                url: '/Home/GetProductCategories',  // HomeController'daki action methodunun URL'si
                type: 'GET',
                data: { productId: productId },  // Parametre olarak productId gönderiyoruz
                success: function (response) {
                    if (response.success) {
                        // Başarıyla veri geldiyse, kategori ve alt kategoriyi sayfada göster
                        $('#category-name').text(response.categoryName);
                        $('#sub-category-name').text(response.subCategoryName);
                    } else {
                        // Hata durumunda mesajı göster
                        console.log(response.message);
                    }
                },
                error: function (xhr, status, error) {
                    // Hata durumunda
                    console.error("AJAX Error: " + status + " - " + error);
                }
            });
        });
    </script>

   

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const productDetails = document.querySelectorAll('.product-detail');

            productDetails.forEach(detail => {
                const originalText = detail.innerHTML;
                const truncatedText = originalText.substring(0, 150) + '...'; // Başlangıçta kısaltılmış metin

                if (originalText.length > 150) {
                    detail.innerHTML = truncatedText; // Kısaltılmış metni göster

                    const readMoreBtn = document.createElement('span');
                    readMoreBtn.className = 'read-more';
                    readMoreBtn.textContent = 'Devamını Oku'; // Buton metni

                    detail.appendChild(readMoreBtn); // Butonu metnin sonuna ekle

                    readMoreBtn.addEventListener('click', () => {
                        if (detail.classList.contains('expand')) {
                            detail.classList.remove('expand'); // Kapat durumunda metni kısalt
                            detail.innerHTML = truncatedText; // Kısaltılmış metni göster
                            detail.appendChild(readMoreBtn); // Butonu tekrar ekle
                            readMoreBtn.textContent = 'Devamını Oku';
                        } else {
                            detail.classList.add('expand'); // Devamını Oku açıldığında metni genişlet
                            detail.innerHTML = originalText; // Tam metni göster
                            detail.appendChild(readMoreBtn); // Butonu tekrar ekle
                            readMoreBtn.textContent = 'Kapat';
                        }
                    });
                }
            });
        });
    </script>
}
