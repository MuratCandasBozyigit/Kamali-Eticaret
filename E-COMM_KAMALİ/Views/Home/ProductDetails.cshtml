@model ECOMM.Core.ViewModels.ProductDetailPageViewModel
@{
    ViewData["Title"] = "Ürün Detayı";
}

<link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700;800&display=swap">
<link rel="stylesheet" href="/css/Mağaza/ProductDetailPage.css">

<div class="container py-5">
    <div class="card-wrapper">
        <div class="card">
            <div class="row d-flex justify-content-center align-items-start">

                <!-- Ana Resim ve Küçük Resimler -->
                <div class="col-lg-12 col-md-12 col-sm-12">
                    <div class="row">
                        <!-- Ana Resim -->
                        <div class="col-lg-8 col-md-9 col-sm-12 mb-4">
                            <div class="ratio ratio-16x9">
                                <img id="mainImage" src="@Model.Product.ImageUrl" alt="Ana Resim" class="main-image">
                            </div>
                        </div>

                        <!-- Küçük Resimler -->
                        <div class="col-lg-2 col-md-3 col-sm-12">
                            <div class="img-thumbnails d-flex flex-column gap-3">
                                <img class="thumbnail" src="@Model.Product.ImageUrl1" alt="Resim 1">
                                <img class="thumbnail" src="@Model.Product.ImageUrl2" alt="Resim 2">
                                <img class="thumbnail" src="@Model.Product.ImageUrl3" alt="Resim 3">
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Ürün Bilgileri ve Butonlar -->
                <div class="col-lg-12 col-md-12 col-sm-12 mt-4">
                    <div class="product-content">
                        <!-- Ürün Başlığı -->
                        <h3 class="product-title">@Model.Product.ProductName</h3>

                        <!-- Mağazaya Git Linki -->
                        <a asp-controller="Home" asp-action="Index" class="product-link">Visit store</a>

                        <div class="product-router">
                            <ul>
                                <li>
                                    Kategori: <span id="category-name">Yükleniyor...</span>
                                </li>
                                <li>
                                    Alt Kategori: <span id="sub-category-name">Yükleniyor...</span>
                                </li>
                            </ul>
                        </div>

                        <div class="product-price">
                            @if (Model.Product.DiscountRate.HasValue && Model.Product.DiscountRate > 0)
                            {
                                <span class="old-price" style="text-decoration: line-through;">
                                    @Model.Product.Price.ToString("C")
                                </span>
                                <br />
                                <span class="discounted-price" style="color: red;">
                                    @(@Model.Product.Price - (@Model.Product.Price * (decimal)Model.Product.DiscountRate.Value / 100))
                                </span>
                            }
                            else
                            {
                                <span>@Model.Product.Price.ToString("C")</span>
                            }
                        </div>

                        <!-- Ürün Detayı -->
                        <div class="product-detail">
                            <h2>Özellikler:</h2>
                            <p>
                                @(string.IsNullOrWhiteSpace(Model.Product.ProductDescription) ? "Açıklama mevcut değil." : Model.Product.ProductDescription)
                            </p>
                        </div><br />

                        <div class="size-selection">
                            <h3>Beden Seçin:</h3>
                            @if (Model.Product.ProductSize.Any())
                            {
                                <div id="size-list" class=" ">
                                    @foreach (var size in Model.Product.ProductSize)
                                    {
                                        <button type="button" class="btn  size-option " data-size="@size">@size</button>
                                    }
                                </div>
                            }
                            else
                            {
                                <p>Beden mevcut değil.</p>
                            }
                        </div>

                        <!-- Satın Alma Bilgisi ve Sepet Ekleme -->
                        <div class="purchase-info">
                            <form asp-controller="ShopCart" asp-action="AddToCart" method="post">
                                <input type="hidden" name="productId" value="@Model.Product.ProductId" />
                                <input type="hidden" name="selectedSize" id="selected-size" />
                                <input type="number" name="quantity" value="1" min="1" max="5" class="form-control mt-4" style="width: 60px; display: inline-block;" />
                                <button type="submit" class="btn  btn-hover">
                                    <i class="fa-solid fa-cart-shopping"></i> Sepete Ekle
                                </button>
                            </form>


                            <form asp-controller="Favourites" asp-action="AddToFavourites" method="post" class="fav-btn" id="fav-form-@Model.Product.ProductId">
                                <input type="hidden" name="productId" value="@Model.Product.ProductId" />
                                <input type="hidden" name="selectedSize" id="selected-size-@Model.Product.ProductId" />
                                <button type="submit" class="btn btn-warning btn-hover">
                                    <i class="fa-regular fa-heart"></i> Favoriler
                                </button>
                            </form>




                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>



<div style="padding: 20px; border: 1px solid #ddd; max-width: 800px; margin: 50px auto;">
    <div class="comment">
        <form asp-action="AddComment" method="post">
            <textarea name="content" required placeholder="Yorumunuzu yazın... Giriş Yapmadan yorum yapılamaz."></textarea>
            <input type="hidden" name="productId" value="@Model.Product.ProductId" />
            <button type="submit">Yorum Yap</button>
        </form>
    </div>
</div>

<div class="container mt-4">
    <div class="row justify-content-center align-items-center">
        <!-- Previous Button -->
        <div class="col-auto">
            <button id="previousBtn" class="btn btn-light"
                    onclick="loadProducts(ViewBag.CurrentPage - 1)"
                    aria-label="Previous"
            @(ViewBag.CurrentPage == 1 ? "disabled" : "")>
                <span aria-hidden="true">&laquo;</span>
            </button>
        </div>

        <div class="col-10">
            <h1 class="text-center">Ürünler</h1>
            <div id="productList" class="row g-3 justify-content-center">
                @if (Model.RelatedProducts != null && Model.RelatedProducts.Any())
                {
                    foreach (var product in Model.RelatedProducts)
                    {
                        <div class="col-6 col-lg-3 custom-col">
                            <div class="card mb-3 product-card">
                                <img src="@product.ImageUrl" class="card-img-top product-image" alt="Product Image" />
                                <div class="card-body text-center">
                                    <h5 class="card-title" style="overflow: hidden; text-overflow: ellipsis; white-space: nowrap;" title="@product.ProductName">
                                        @product.ProductName
                                    </h5>
                                    <h6 style="overflow: hidden; text-overflow: ellipsis; white-space: nowrap;" title="@product.ProductTitle">
                                        @product.ProductTitle
                                    </h6>
                                    <p class="card-text">@product.Price.ToString("C")</p>
                                    <a asp-controller="Home" asp-action="ProductDetails" asp-route-productId="@product.ProductId" class="btn btn-primary btn-hover mb-2 mt-1">Detaylar</a>

                                    <!-- Add to Cart Form -->
                                    <form asp-controller="ShopCart" asp-action="AddToCart" method="post" class="d-flex flex-column align-items-center">
                                        <input type="hidden" name="productId" value="@product.ProductId" />
                                        <input type="number" name="quantity" value="1" min="1" max="5" class="form-control mb-2" style="width: 60px; display: inline-block;" />
                                        <button type="submit" class="btn btn-primary btn-hover mb-3">
                                            <i class="fa-solid fa-cart-shopping"></i> Sepete Ekle
                                        </button>
                                    </form>

                                    <!-- Add to Favourites Form -->
                                    <form asp-controller="Favourites" asp-action="AddToFavourites" method="post">
                                        <input type="hidden" name="productId" value="@product.ProductId" />
                                        <button type="submit" class="btn btn-primary btn-hover mb-2">
                                            <i class="fa-regular fa-heart"></i> Favoriler
                                        </button>
                                    </form>
                                </div>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="d-flex justify-content-center align-items-center" style="height: 100px;">
                        <p style="font-weight: 900;font-size:25px;">İlgili ürün bulunamadı.</p>
                    </div>
                }
            </div>
        </div>

        <!-- Next Button -->
        <div class="col-auto">
            <button id="nextBtn" class="btn btn-light"
                    onclick="loadProducts(ViewBag.CurrentPage + 1)"
                    aria-label="Next"
            @(ViewBag.CurrentPage == ViewBag.TotalPages ? "disabled" : "")>
                <span aria-hidden="true">&raquo;</span>
            </button>
        </div>
    </div>
</div>

@section Scripts {
    <script>
              (function () {
            var formId = "fav-form-@Model.Product.ProductId"; // Form ID
            var form = document.getElementById(formId); // Formu al

            if (form) {
                // Bu formdaki beden seçeneklerini seç
                form.querySelectorAll('.size-option').forEach(function (button) {
                    button.addEventListener('click', function () {
                        // Tüm butonlardan 'selected' sınıfını kaldır
                        form.querySelectorAll('.size-option').forEach(function (btn) {
                            btn.classList.remove('selected');
                        });

                        // Seçilen butona 'selected' sınıfını ekle
                        button.classList.add('selected');

                        // Seçilen bedeni ilgili hidden input'a yaz
                        var selectedSizeInput = form.querySelector('#selected-size-@Model.Product.ProductId');
                        var selectedSize = button.getAttribute('data-size');
                        if (selectedSizeInput) {
                            selectedSizeInput.value = selectedSize; // Hidden input'a değeri ata
                        }
                    });
                });
            }
        })();

    </script>









    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        window.addEventListener('load', function () {
            var mainImage = document.getElementById('mainImage');
            var thumbnails = document.querySelectorAll('.thumbnail');

            // Ana resmin yüksekliğini al
            var mainImageHeight = mainImage.clientHeight;

            // Küçük resimlerin yüksekliğini ana resmin yüksekliğine orantılı olarak ayarla
            thumbnails.forEach(function (thumbnail) {
                thumbnail.style.height = (mainImageHeight / 3) + 'px'; // Küçük resimler ana resmin 1/3'ü kadar olacak
            });
        });

        // Sayfa boyutu değiştiğinde yeniden boyutlandırma
        window.addEventListener('resize', function () {
            var mainImage = document.getElementById('mainImage');
            var thumbnails = document.querySelectorAll('.thumbnail');

            var mainImageHeight = mainImage.clientHeight;

            thumbnails.forEach(function (thumbnail) {
                thumbnail.style.height = (mainImageHeight / 3) + 'px'; // Küçük resimler ana resmin 1/3'ü kadar olacak
            });
        });
    </script>
    <script>
        $(document).ready(function () {
            // Küçük resimlere tıklama olayı
            $('.thumbnail').click(function () {
                // Tıklanan küçük resmin kaynak (src) bilgisini al
                var newSrc = $(this).attr('src');

                // Ana resmin mevcut kaynak bilgisini al
                var oldSrc = $('#mainImage').attr('src');

                // Ana resmin kaynağını yeni resimle değiştir 
                $('#mainImage').attr('src', newSrc);

                // Tıklanan küçük resmin kaynağını eski ana resim kaynağıyla değiştir
                $(this).attr('src', oldSrc);
            });
        });
    </script>
    <script>
        // Beden seçenekleri tıklandığında
        document.querySelectorAll('.size-option').forEach(function (button) {
            button.addEventListener('click', function () {
                // Seçilen bedeni hidden input'a ata
                var productId = button.getAttribute('data-product-id'); // Ürün ID'sini al
                var selectedSize = button.getAttribute('data-size'); // Seçilen bedeni al

                // İlgili hidden input'u bul ve value'sunu değiştir
                document.getElementById('selected-size-' + productId).value = selectedSize;

                // Tüm butonlardan 'selected' sınıfını kaldır
                document.querySelectorAll('.size-option').forEach(function (btn) {
                    btn.classList.remove('selected');
                });

                // Seçilen butona 'selected' sınıfını ekle
                button.classList.add('selected');
            });
        });
    </script>
    <script>
                document.querySelectorAll('.size-option').forEach(button => {
            button.addEventListener('click', function () {
                // Seçilen beden hidden input'a atanıyor
                document.getElementById('selected-size').value = this.dataset.size;

                // Seçim vurgusunu güncelle
                document.querySelectorAll('.size-option').forEach(btn => btn.classList.remove('active'));
                this.classList.add('active');
            });
        });

    </script>
    <script>
              document.querySelectorAll('.size-option').forEach(function (button) {
            button.addEventListener('click', function () {
                // Tüm butonlardan 'selected' sınıfını kaldır
                document.querySelectorAll('.size-option').forEach(function (btn) {
                    btn.classList.remove('selected');
                });

                // Seçilen butona 'selected' sınıfını ekle
                button.classList.add('selected');

                // Seçilen bedeni bir input alanına yaz
                var selectedSize = button.getAttribute('data-size');
                document.getElementById('selected-size').value = selectedSize;  // Bu inputu HTML'de eklemeyi unutma
            });
        });

        // Form gönderilmeden önce bedeni kontrol et
        $('form').submit(function(event) {
            var selectedSize = $('#selected-size').val();
            if (!selectedSize) {
                alert("Lütfen bir beden seçin.");
                event.preventDefault(); // Formun gönderilmesini engelle
            }
        });

    </script>
    <script>
        $(document).ready(function () {
            // Product ID'yi belirleyelim (Bu ID'yi dinamik olarak sayfadan alabilirsiniz)
            var productId = @Model.Product.ProductId;  // Örneğin modelden alınıyor

            // AJAX ile kategori ve alt kategori bilgilerini alalım
            $.ajax({
                url: '/Home/GetProductCategories',  // HomeController'daki action methodunun URL'si
                type: 'GET',
                data: { productId: productId },  // Parametre olarak productId gönderiyoruz
                success: function (response) {
                    if (response.success) {
                        // Başarıyla veri geldiyse, kategori ve alt kategoriyi sayfada göster
                        $('#category-name').text(response.categoryName);
                        $('#sub-category-name').text(response.subCategoryName);
                    } else {
                        // Hata durumunda mesajı göster
                        console.log(response.message);
                    }
                },
                error: function (xhr, status, error) {
                    // Hata durumunda
                    console.error("AJAX Error: " + status + " - " + error);
                }
            });
        });
    </script>
    <script>
        // Function to load products
        function loadProducts(page) {
            $.ajax({
                url: '@Url.Action("ProductDetails", "Home")', // Your controller and action URL
                type: 'GET',
                data: { page: page }, // Pass the current page as parameter
                success: function (data) {
                    // Update the product list
                    $('#productList').html(data.productsHtml);

                    // Update the ViewBag with new page information
                    ViewBag.CurrentPage = data.currentPage;
                    ViewBag.TotalPages = data.totalPages;

                    // Enable/Disable buttons
                    if (data.currentPage == 1) {
                        $('#previousBtn').prop('disabled', true);
                    } else {
                        $('#previousBtn').prop('disabled', false);
                    }

                    if (data.currentPage == data.totalPages) {
                        $('#nextBtn').prop('disabled', true);
                    } else {
                        $('#nextBtn').prop('disabled', false);
                    }
                }
            });
        }
    </script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const productDetails = document.querySelectorAll('.product-detail');

            productDetails.forEach(detail => {
                const originalText = detail.innerHTML;
                const truncatedText = originalText.substring(0, 150) + '...'; // Başlangıçta kısaltılmış metin

                if (originalText.length > 150) {
                    detail.innerHTML = truncatedText; // Kısaltılmış metni göster

                    const readMoreBtn = document.createElement('span');
                    readMoreBtn.className = 'read-more';
                    readMoreBtn.textContent = 'Devamını Oku'; // Buton metni

                    detail.appendChild(readMoreBtn); // Butonu metnin sonuna ekle

                    readMoreBtn.addEventListener('click', () => {
                        if (detail.classList.contains('expand')) {
                            detail.classList.remove('expand'); // Kapat durumunda metni kısalt
                            detail.innerHTML = truncatedText; // Kısaltılmış metni göster
                            detail.appendChild(readMoreBtn); // Butonu tekrar ekle
                            readMoreBtn.textContent = 'Devamını Oku';
                        } else {
                            detail.classList.add('expand'); // Devamını Oku açıldığında metni genişlet
                            detail.innerHTML = originalText; // Tam metni göster
                            detail.appendChild(readMoreBtn); // Butonu tekrar ekle
                            readMoreBtn.textContent = 'Kapat';
                        }
                    });
                }
            });
        });
    </script>
}
